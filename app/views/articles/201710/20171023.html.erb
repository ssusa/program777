<%= render "/articles/article_header" %>
<p>
  前回は一覧画面の表示とページングが出来るようになりました。
  今回は前回実装していない、各ボタンの処理を実装します。
  <strong>各ボタンのリンク先（どのアクションに飛ぶのか、どのHTMLを出力するのか）を理解することがポイントです。</strong>
  <strong>また、リンクのHTTPメソッド、パラメータ（クエリストリング）にも注目してみてください。</strong>
</p>
<p>
  ボタンとアクションの表を作りましたので、ルーティングやソースと照らし合わせたり、
  「ページのソースを表示」などで実際のHTMLを確認してください。
  画面のリンクからルーティングで設定されたアクションへ飛ばされていることが理解できればOKです。
</p>

<h3>一覧画面のリンク（ボタン）と対応しているアクション</h3>
<table class="type02">
  <thead>
  <tr>
    <th>ボタン</th>
    <th>アクション</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td>全て表示リンク</td>
    <td>index</td>
  </tr>
  <tr>
    <td>完了のみリンク</td>
    <td>index</td>
  </tr>
  <tr>
    <td>未完了のみリンク</td>
    <td>index</td>
  </tr>
  <tr>
    <td>ページングのリンク</td>
    <td>index</td>
  </tr>
  <tr>
    <td>タスクを登録リンク</td>
    <td>new</td>
  </tr>
  <tr>
    <td>完了ボタン</td>
    <td>kanryo</td>
  </tr>
  <tr>
    <td>照会リンク</td>
    <td>show</td>
  </tr>
  <tr>
    <td>編集リンク</td>
    <td>edit</td>
  </tr>
  <tr>
    <td>削除リンク</td>
    <td>destroy</td>
  </tr>
  </tbody>
</table>

<p>※ページングのリンクはソースからは判断できませんが出来上がるHTMLを見るとindexのURLが書かれています</p>

<br>
<h2 class="midashi01">①tasks_controller.rb編集</h2>

<span class="prettyprint-filename">/app/controllers/tasks_controller.rb</span>
<pre class="prettyprint linenums">
  #一覧画面 削除ボタン押下時のアクション
  def destroy

    #idでタスクテーブルを取得
    @task = Task.find(params[:id])

    #削除処理（delete文発行）
    @task.destroy

    #フラッシュ（一度きりのセッション）にメッセージを格納
    flash[:msg] = "削除しました。"

    #呼び出し元URLへリダイレクト
    redirect_to request.referer

  end

  #一覧画面 完了ボタン押下時のアクション
  def kanryo

    #idでタスクテーブルを取得
    @task = Task.find(params[:id])

    #kanryoにtrueをセット
    @task.kanryo = true

    #更新処理（update文発行）
    @task.save

    #呼び出し元URLへリダイレクト
    redirect_to request.referer

  end
</pre>

<p>
  5行目はお決まりの書き方でparams[:id]のデータを1件取得するという処理です。
  次のaタグは削除リンクのものですが、params[:id]には、この35などの数字が入ります。
</p>

<span style="font-weight: bold;border: 1px solid #777;padding:2px;margin-left:10px">
  &lt;a data-method="delete" href="/tasks/<span style="color: red;font-weight: bold">35</span>"&gt;削除&lt;/a&gt;
</span>
（削除リンクのHTMLタグ）

<p>
  8行目のdestroyはActiveRecordのインスタンスメソッドで、DELETE文を発行します。
  つまり、上で取得したデータをデータベースのテーブルから物理削除します。
</p>

<p>
  11行目のflash[:msg]は1回のリクエストのみ有効なセッションです。
  flashは、更新メッセージを表示するためにあります。（メッセージ表示は新規登録画面実装時に記載します）
</p>

<p>
  14行目のリダイレクトとは、サーバーからもう一度リクエストを発生させることで、
  呼び出し元の一覧画面を再描画しています。ブラウザのアドレスバーに一覧画面のURLを入れているのと同じです。
</p>

<p>
  28行目のsaveもdestroyと同じくActiveRecordのインスタンスメソッドです。
  @taskのidがDBに存在する場合はUPDATE文が発行され、idがnilの場合はINSERT文が発行されます。
  ここでは22行目のfindでparams[:id]からレコードを取得していますので、そのidのレコードのUPDATEが行われます。
</p>

<br>
<h2 class="midashi01">②index.html.erb</h2>

<span class="prettyprint-filename">/app/views/tasks/index.html.erb</span>
<pre class="prettyprint linenums">
&lt;h2&gt;一覧画面&lt;/h2&gt;
&lt;!-- 一覧画面の作成②で追加 ここから --&gt;
&lt;%= link_to "全て表示", tasks_path %&gt;
&lt;%= link_to "完了のみ", tasks_path + "?kanryo=true", style:"margin-left:5px;" %&gt;
&lt;%= link_to "未完了のみ", tasks_path + "?kanryo=false", style:"margin-left:5px;" %&gt;
&lt;%= link_to "タスクを登録", new_task_path, class:"pull-right" %&gt;
&lt;!-- 一覧画面の作成②で追加 ここまで --&gt;
&lt;table class="table table-bordered"&gt;
  &lt;thead&gt;
  &lt;tr&gt;
    &lt;th class="grid-th-width1 pc-only"&gt;No&lt;/th&gt;
    &lt;th class="grid-th-width2"&gt;タスク&lt;/th&gt;
    &lt;th class="grid-th-width3"&gt;期限&lt;/th&gt;
    &lt;th class="grid-th-width4"&gt;ｽﾃｰﾀｽ&lt;/th&gt;
    &lt;th class="grid-th-width5"&gt;編集&lt;/th&gt;
  &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;% @tasks.each do |task| %&gt;
      &lt;tr style="height:48px;"&gt;
        &lt;td class="pc-only"&gt;&lt;%= @grid_no.to_s %&gt;&lt;/td&gt;
        &lt;td style="vertical-align: middle"&gt;&lt;%= task.name %&gt;&lt;/td&gt;
        &lt;td style="vertical-align: middle"&gt;&lt;%= kigen_format(task.kigen) %&gt;&lt;/td&gt;
        &lt;td style="vertical-align: middle"&gt;&lt;%= kanryo_tag(task) %&gt;&lt;/td&gt;
        &lt;td class="henshu-cell"&gt;
&lt;!-- 一覧画面の作成②で追加 ここから --&gt;
          &lt;%= link_to "照会", task_path(task) %&gt;
          &lt;%= link_to "編集", edit_task_path(task) %&gt;
          &lt;%= link_to "削除", task_path(task), method:"delete" %&gt;
&lt;!-- 一覧画面の作成②で追加 ここまで --&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;% @grid_no = @grid_no + 1 %&gt;
  &lt;% end %&gt;
  &lt;tbody&gt;
  &lt;/table&gt;
&lt;div style="text-align: center"&gt;
  &lt;%= will_paginate @tasks,
                    renderer: BootstrapPagination::Rails,
                    previous_label: "前へ",
                    next_label: "次へ",
                    inner_window: 1,
                    outer_window: 0,
                    class:"pagination-sm"
  %&gt;
&lt;/div&gt;
</pre>

<p>
  index.html.erbには、前回作成したファイルにリンク部分を追加しました。
  追加部分は2行目〜7行目と、26行目〜30行目です。
  link_to〜はaタグを生成するためのrailsのヘルパークラスです。
</p>

<p>
  3行目〜5行目のtasks_pathはtasks_controllerのindexアクションに飛ばすURLです。aタグのhrefにあたる部分です。
  4行目と5行目の「tasks_path + "kanryo=true"」はURLにパラメータを渡しています。
  実際に出来上がるパスはこのようになります。
</p>

<span style="font-weight: bold;border: 1px solid #777;padding:2px;margin-left:10px">
  http://localhost:3000/tasks<span style="color: red;font-weight: bold">?kanryo=true</span>
</span>

<p>
  赤字の部分はコントローラ内ではparams[:kanryo]とすることで値を取得することができます。
  また、この<strong>?マークから始まる部分をクエリストリングといいます。</strong>
</p>

<p>
  6行目のnew_task_pathも同様にtasks_controllerのnewアクションに飛ばすURLを生成しています。
</p>

<p>
  27行目〜29行目はtask_path(<span style="color:red">task</span>)のようにモデルを引数に渡しています。
  モデルにはidがあるため、生成されるURLはid付きのものになります。
  27行目と29行目は同じtask_path(task)ですが、削除のほうはmethod:"delete"となっており、
  HTTPメソッドによりアクションが分岐されるので、27行目はshowアクションを、29行目はdestroyアクションを呼び出すURLが生成されます。
  余裕のある人は<a style="text-decoration: underline" href="/articles/201710/20171009">この記事</a>のルーティングとも比較してみてください。
</p>

<h3>一覧画面のリンク（ボタン）と生成されるURL</h3>
<table class="type02">
  <thead>
  <tr>
    <th>ボタン</th>
    <th>URL</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td>全て表示リンク</td>
    <td>/tasks</td>
  </tr>
  <tr>
    <td>完了のみリンク</td>
    <td>/tasks?kanryo=true</td>
  </tr>
  <tr>
    <td>未完了のみリンク</td>
    <td>/tasks?kanryo=false</td>
  </tr>
  <tr>
    <td>タスクを登録リンク</td>
    <td>/tasks/new</td>
  </tr>
  <tr>
    <td>完了ボタン</td>
    <td>/tasks/35/kanryo</td>
  </tr>
  <tr>
    <td>照会リンク</td>
    <td>/task/35</td>
  </tr>
  <tr>
    <td>編集リンク</td>
    <td>/task/35/edit</td>
  </tr>
  <tr>
    <td>削除リンク</td>
    <td>/task/35/destroy</td>
  </tr>
  </tbody>
</table>

<br>
<h2 class="midashi01">application.html.erb</h2>

<span class="prettyprint-filename">/app/views/layouts/application.html.erb</span>
<pre class="prettyprint linenums">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;タスク管理 サンプル (Ruby on Rails)&lt;/title&gt;
  &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;
  &lt;meta charset="utf-8" /&gt;
  &lt;meta name="viewport" content="width=device-width,initial-scale=1"&gt;
  &lt;%= csrf_meta_tags %&gt;
  &lt;link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css"&gt;
  &lt;link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"&gt;
  &lt;%= stylesheet_link_tag    'application', media: 'all' %&gt;
  &lt;script src="https://code.jquery.com/jquery-3.2.1.js"&gt;&lt;/script&gt;
  &lt;script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"&gt;&lt;/script&gt;
  &lt;%= javascript_include_tag 'application' %&gt;
&lt;!-- 一覧画面の作成②で追加 ここから --&gt;
  &lt;style type="text/css"&gt;
    .waku{
      padding:20px;
      margin-bottom:20px;
      border-radius:4px;
      border:2px solid #ddd;
    }
    @media (max-width: 768px) {
      h1#title{
        font-size:16pt;
      }
      a {
        -webkit-tap-highlight-color: rgba(16, 16, 16, 0.3);
      }
      .pc-only{
        display:none;
      }
      .grid-th-width1{
        width:0%;
      }
      .grid-th-width2{
        width:50%;
      }
      .grid-th-width3{
        width:15%;
      }
      .grid-th-width4{
        width:20%;
      }
      .grid-th-width5{
        width:15%;
      }
      .henshu-cell a{
        display:block;
        text-align:center;
      }
    }
    @media (min-width: 769px) {
      h1#title{
        font-size:24pt;
      }
      .grid-th-width1{
        width:10%;
      }
      .grid-th-width2{
        width:55%;
      }
      .grid-th-width3{
        width:10%;
      }
      .grid-th-width4{
        width:10%;
      }
      .grid-th-width5{
        width:15%;
      }
      .henshu-cell a{
        margin-right:10px;
      }
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;script&gt;
  $(function() {
    if ($(".alert").length)
    {
      $(".alert").show();
    }
  });
&lt;/script&gt;
&lt;!-- 一覧画面の作成②で追加 ここまで --&gt;
&lt;header id="header" style="background-color: #333;color:#fff"&gt;
  &lt;div class="container"&gt;
    &lt;div class="row"&gt;
      &lt;div class="col-xs-12"&gt;
        &lt;h1 id="title"&gt;
          タスク管理 サンプル (Ruby on Rails)
        &lt;/h1&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/header&gt;
&lt;main id="main"&gt;
  &lt;div class="container"&gt;
    &lt;div class="row"&gt;
      &lt;div class="col-xs-12"&gt;
&lt;!-- 一覧画面の作成②で追加 ここから --&gt;
        &lt;% if flash[:msg].present? %&gt;
          &lt;div class="alert alert-info" style="margin-top:20px;border-width:3px;display:none"&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;%= flash[:msg] %&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/div&gt;
        &lt;% end %&gt;
&lt;!-- 一覧画面の作成②で追加 ここまで --&gt;
        &lt;%= yield %&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/main&gt;
&lt;footer id="footer"&gt;
  &lt;div class="container"&gt;
    &lt;div class="row"&gt;
      &lt;div class="col-xs-12"&gt;
        &lt;div style="padding-top:10px;text-align: center;border-top: 1px #999999 solid;"&gt;
          &lt;p&gt;フッター&lt;/p&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/footer&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>

<p>
  apprication.html.erbは、cssとflashにメッセージがあった場合に表示するjavascript、htmlを追加しました。
  cssは最低限のレスポンシブを考慮してあります。
  全てをコピー&ペーストするだけでOKです。
</p>

<br>
<h2 class="midashi01">動作確認</h2>

<p>
  「rails s」でサーバーを起動して、「localhost:3000」にアクセスします。
  以下のような画面が表示されればOKです。
  各リンクを押下してみてください。タスクを登録リンクと、照会リンク、編集リンクはページ遷移だけですが、
  それ以外のリンク、ボタンの処理は完了しています。レスポンシブも対応済みなので、携帯でも問題なく見れます。
</p>

<div class="box01">
  <a href="https://www.images.program777.com/201710/20171023_1.jpg" data-lightbox="20171023_1">
    <img src="https://www.images.program777.com/201710/20171023_1.jpg" style="width:100%">
  </a>
</div>

<%= render "/articles/article_footer" %>
